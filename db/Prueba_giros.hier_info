|Prueba_giros
locked <= PLL:inst2.locked
clk => PLL:inst2.inclk0
reset => inst3.IN0
pwm1 <= PLL:inst2.c1
pwm2 <= PLL:inst2.c1
c1 <= PLL:inst2.c1
MD[0] <= control_motor:inst.MD[0]
MD[1] <= control_motor:inst.MD[1]
Muro => inst4.IN0
MI[0] <= control_motor:inst.MI[0]
MI[1] <= control_motor:inst.MI[1]


|Prueba_giros|PLL:inst2
areset => altpll:altpll_component.areset
inclk0 => altpll:altpll_component.inclk[0]
c0 <= altpll:altpll_component.clk[0]
c1 <= altpll:altpll_component.clk[1]
locked <= altpll:altpll_component.locked


|Prueba_giros|PLL:inst2|altpll:altpll_component
inclk[0] => PLL_altpll:auto_generated.inclk[0]
inclk[1] => PLL_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => PLL_altpll:auto_generated.areset
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= PLL_altpll:auto_generated.locked
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|Prueba_giros|PLL:inst2|altpll:altpll_component|PLL_altpll:auto_generated
areset => pll_lock_sync.ACLR
areset => pll1.ARESET
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1
locked <= locked.DB_MAX_OUTPUT_PORT_TYPE


|Prueba_giros|control_motor:inst
reset => reg_fstate.Derecho_giroDer.OUTPUTSELECT
reset => reg_fstate.Gira_Der_90.OUTPUTSELECT
reset => reg_fstate.Gira_Izq_90.OUTPUTSELECT
reset => reg_fstate.Derecho_giroIzq.OUTPUTSELECT
reset => MD.OUTPUTSELECT
reset => MD.OUTPUTSELECT
reset => MI.OUTPUTSELECT
reset => MI.OUTPUTSELECT
clk => fstate~1.DATAIN
Muro => reg_fstate.DATAA
Muro => Selector0.IN1
Muro => Selector2.IN0
Muro => Selector1.IN1
MD[0] <= MD.DB_MAX_OUTPUT_PORT_TYPE
MD[1] <= MD.DB_MAX_OUTPUT_PORT_TYPE
MI[0] <= MI.DB_MAX_OUTPUT_PORT_TYPE
MI[1] <= MI.DB_MAX_OUTPUT_PORT_TYPE


